version: '3'
services:
  db:
    image: percona:ps-8.0
    container_name: mysql
    user: root
    networks:
      - lamp-docker
    environment:
      MYSQL_DATABASE: lamp_docker
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: proj_docker
      MYSQL_PASSWORD: password
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      TZ: 'Asia/Hong_Kong'
    command: mysqld --plugin-load=audit_log.so --audit_log_format=json --audit_log_file=/var/log/mysql/audit.json
    volumes:
      - "./db:/docker-entrypoint-initdb.d/"
      - "./mysql/config/my.cnf:/etc/my.cnf"
      - ./mysql_log:/var/log/mysql
      # - ./var/lib/mysql:/var/lib/mysql
    ports:
      - '3306:3306'
    restart: always
  es:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
    networks:
      - lamp-docker
  kibana:
    image: kibana:7.14.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - es
    healthcheck:
      test: ["CMD", "curl", "-f", "kibana:5601"]
      interval: 50s
      timeout: 50s
      retries: 5
    networks:
      - lamp-docker
  filebeat:
    user: root
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.14.2
    privileged: true
    restart: on-failure
    command: ["--strict.perms=false"]
    volumes:
      # - filebeat:/usr/share/filebeat
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - /var/run/docker.sock:/host_docker/docker.sock
      - /var/lib/docker:/host_docker/var/lib/docker
      # - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      - ./mysql_log:/var/log/mysql
      - "./filebeat_conf/filebeat.yml:/usr/share/filebeat/filebeat.yml"
      # - ./var/lib/mysql/audit.log:/var/log/mysql/audit.log
      # - "./filebeat_conf/mysql.yml:/usr/share/filebeat/modules.d/mysql.yml"
    environment:
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-node1}
      - KIBANA_HOST=${KIBANA_HOST:-node1}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
     # disable strict permission checks
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - lamp-docker
    build:
      context: .
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3000:3000'
    networks:
      - lamp-docker
    environment:
      GF_INSTALL_PLUGINS: percona-percona-app
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana_dashboard:/etc/grafana/provisioning/dashboards/
  mysqlexporter:
    container_name: mysql_exporter
    image: prom/mysqld-exporter
    ports: 
      - "9104:9104"
    environment: 
      - DATA_SOURCE_NAME=root:secret@(db)/lamp_docker
    networks:
      - lamp-docker
    expose:
      - 9104
    depends_on:
      - db
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/config:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    depends_on:
      - mysqlexporter
    networks:
      - lamp-docker
  php_apache:
    image: php:7.4.33-apache
    build: ./php_dockerdirectory
    container_name: php
    networks:
      - lamp-docker
    volumes:
      - "./src:/var/www/html"
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - db
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    networks:
      - lamp-docker
    ports:
      - 8001:80
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
    depends_on:
      - db
networks:
  lamp-docker:
    driver: bridge
# configs:
#   fb_config:
#     file: ./filebeat_conf/filebeat.yml
volumes:
  my-datavolume: